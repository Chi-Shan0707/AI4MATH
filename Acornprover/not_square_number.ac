from nat import Nat
numerals Nat
define square(n: Nat) -> Nat {
    n * n
}
define mod_three(n: Nat) -> Nat {
    n % 3
}
theorem not_square_number(n: Nat) {
    mod_three(n) = 2 implies not exists(m: Nat){
        square(m) = n
    }
}by{
    let k: Nat satisfy{
        3 * k + 2 = n
    }
    
}